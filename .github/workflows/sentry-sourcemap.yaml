name: Upload Sentry sourcemap

on:
    workflow_dispatch:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest
        env:
            IMAGE_NAME: sheikhariful/test_sentry:latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  ref: "main"

            - uses: pnpm/action-setup@v4
              name: Install pnpm
              with:
                  run_install: false

            - name: Use Node.js 22.x
              uses: actions/setup-node@v4
              with:
                  node-version: 22.x
                  cache: "pnpm"

            - name: Install dependencies
              run: pnpm install --ignore-scripts

            - name: Build
              run: |
                  NODE_OPTIONS=--max-old-space-size=4096 pnpm build

            - name: Log in to docker hub
              run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            - name: Build Docker image
              run: docker build -t $IMAGE_NAME .

            - name: Push Docker image
              run: docker push $IMAGE_NAME

            # - name: Trigger redeploy on Render
            #   run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}

            # - name: Upload source maps to Sentry
            #   env:
            #       SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
            #       SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
            #       SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
            #   run: |
            #       pnpm dlx @sentry/cli sourcemaps inject ./.next
            #       pnpm dlx @sentry/cli sourcemaps upload ./.next

            # - name: Create Sentry Client release
            #   uses: getsentry/action-release@v3
            #   env:
            #       SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
            #       SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
            #       SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
            #   with:
            #       environment: production
            #       release: ${{ github.sha }}
            #       disable_telemetry: true
            #       ignore_missing: true
            #       sourcemaps: ""
            #       # url_prefix: "~/_next/static"

            - name: Delete source maps after upload
              run: |
                  echo "Deleting all .map files..."
                  find ./.next -type f -name '*.map' -delete
                  echo "Source maps deleted."
